                                GIT DIFF
==================================================================================

We can use git diff command to view changes between commits, branches, files, our working directory, and more.

We often use git diff alongside commands like git status and git log , to get a better picture of a repository and how it has changed over time.

git diff   -> Without any additional options, git diff lists all the chages in our working directory that are NOT staged for the next commit.

                                GIT DIFF HEAD
==================================================================================

git diff HEAD  -> lists all changes in the working tree since our last commit


                                GIT DIFF --STAGED or --CACHED
==================================================================================

git diff --staged or --cached will list the changes between the staging area and our last commit.

It is kind of: "Show me what will be in my commit if I run git commit right now."


                                GIT DIFF TO SPECIFIC FILES
==================================================================================

We can see changes within a specific file by providing git diff with a filename:

git diff HEAD [fimename]  or git diff --staged [filename]


                                GIT DIFF TO COMPARE BRANCHES
==================================================================================

git diff branch1..branch2  -> it will list the changes betwen the tips of the branch1 and branch2

or 

git diff branch1 branch2   -> space will work same like two dots.

In both examples order of branches matters.

                                GIT DIFF TO COMPARE COMMITS
==================================================================================

git diff commit1..commit2   -> to compare two commits, provide git diff with the commit hashes of the commits in question
